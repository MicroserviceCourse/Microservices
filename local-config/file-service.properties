# === App Info ===
spring.application.name=file-service
server.port=8484

# === Eureka Client ===
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true

# === Static Resources ===
spring.web.resources.static-locations=file:src/main/resources/static/

# === File Upload Config ===
spring.servlet.multipart.max-file-size=2GB
spring.servlet.multipart.max-request-size=2GB

# === Kafka Common Config ===
spring.kafka.bootstrap-servers=localhost:9092

# === Kafka Consumer: Nhận FileUploadRequest từ product-service ===

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=file-service-group

# Key deserializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Value deserializer: ErrorHandlingDeserializer để dễ debug
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Chỉ định class đích để deserialize (phải là class local của file-service)
spring.kafka.consumer.properties.spring.json.value.default.type=org.example.file_service.dto.request.FileUploadRequest

# Tin tưởng tất cả package (hoặc chỉ package chứa DTO nếu muốn an toàn hơn)
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# === Kafka Producer: Gửi FileUploadResult về product-service ===
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
